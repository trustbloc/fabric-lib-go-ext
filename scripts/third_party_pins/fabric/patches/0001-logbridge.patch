From db214ee074b78aceb6e6736f5bd8ba81514a1dc7 Mon Sep 17 00:00:00 2001
From: Troy Ronda <t.....@securekey.com>
Date: Wed, 27 Sep 2017 19:12:10 -0400
Subject: [PATCH] logbridge

Copyright SecureKey Technologies Inc. All Rights Reserved.
SPDX-License-Identifier: Apache-2.0

Signed-off-by: Troy Ronda <t.....@securekey.com>
---
 libpatch/logbridge/logbridge.go | 51 +++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 51 insertions(+)
 create mode 100644 libpatch/logbridge/logbridge.go

diff --git a/libpatch/logbridge/logbridge.go b/libpatch/logbridge/logbridge.go
new file mode 100644
index 00000000..fdeb3a4f
--- /dev/null
+++ b/libpatch/logbridge/logbridge.go
@@ -0,0 +1,51 @@
+/*
+Copyright SecureKey Technologies Inc. All Rights Reserved.
+
+SPDX-License-Identifier: Apache-2.0
+*/
+
+package logbridge
+
+import (
+	"github.com/trustbloc/fabric-lib-go-ext/pkg/common/logging"
+)
+
+// Log levels (from pkg/logging/level.go).
+const (
+	CRITICAL logging.Level = iota
+	ERROR
+	WARNING
+	INFO
+	DEBUG
+)
+
+// Logger bridges the lib's logger struct
+type Logger struct {
+	*logging.Logger
+	module string
+}
+
+// MustGetLogger bridges calls the lib's NewLogger
+func MustGetLogger(module string) *Logger {
+	fabModule := "fablibgoext"
+	logger := logging.NewLogger(fabModule)
+	return &Logger{
+		Logger: logger,
+		module: fabModule,
+	}
+}
+
+// Warningf bridges calls to the lib logger's Warnf.
+func (l *Logger) Warningf(format string, args ...interface{}) {
+	l.Warnf(format, args...)
+}
+
+// Warning bridges calls to the lib logger's Warn.
+func (l *Logger) Warning(args ...interface{}) {
+	l.Warn(args...)
+}
+
+// IsEnabledFor bridges calls to the lib logger's IsEnabledFor.
+func (l *Logger) IsEnabledFor(level logging.Level) bool {
+   return logging.IsEnabledFor(l.module, level)
+}
-- 
2.14.1

